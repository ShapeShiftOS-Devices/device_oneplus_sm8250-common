<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2015-2016 The CyanogenMod Project
                   2017-2018 The LineageOS Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<resources>
    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
        <item>/system/system_ext/priv-app/TouchGestures/TouchGestures.apk</item>
        <item>/system/priv-app/KeyHandler/KeyHandler.apk</item>
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
        <item>com.android.touch.gestures.KeyHandler</item>
        <item>org.shapeshift.settings.slider_settings.KeyHandler</item>
    </string-array>

    <!-- Whether device has physical tri state switch -->
    <bool name="config_hasAlertSlider">true</bool>

    <!-- The location of the devices physical tri state switch
         0: Left side
         1: Right side -->
    <integer name="config_alertSliderLocation">1</integer>

    <!-- Whether device has warp charging support -->
    <bool name="config_hasWarpCharger">true</bool>

    <!-- Does the battery LED support multiple colors?
         Used to decide if the user can change the colors -->
    <bool name="config_multiColorBatteryLed">false</bool>

    <!-- Is the battery LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveBatteryLed">false</bool>

    <!-- Do the battery/notification LEDs support pulsing?
         Used to decide if we show pulse settings -->
    <bool name="config_ledCanPulse">false</bool>

    <!-- Defines custom Vendor sensor for pocket detection. -->
    <string name="config_pocketJudgeVendorSensorName">oneplus.sensor.pocket</string>

    <!-- The list of components which should be automatically disabled for a specific device. -->
    <string-array name="config_deviceDisabledComponents" translatable="false">
        <item>com.google.android.gms/com.google.android.gms.nearby.messages.service.NearbyMessagesService</item>
        <item>com.google.android.gms/com.google.android.gms.nearby.discovery.service.DiscoveryService</item>
    </string-array>

    <!-- Smart charge sysfs node and value for suspend/resume charging-->
    <string name="config_SmartChargingSysfsNode" translatable="false">/sys/class/power_supply/battery/input_suspend</string>
    <string name="config_SmartChargingSuspendValue" translatable="false">1</string>
    <string name="config_SmartChargingResumeValue" translatable="false">0</string>

    <!-- Whether the device supports Smart Pixels -->
    <bool name="config_enableSmartPixels">true</bool>

    <!-- Whether device has a notch -->
    <bool name="config_physicalDisplayCutout">true</bool>

    <!-- Defines the sysfs attribute path used by the device
         to enable/disable DC dimming. -->
    <string name="config_deviceDcDimmingSysfsNode">/sys/class/drm/card0-DSI-1/dimlayer_bl_en</string>

    <!-- OnePlus uses a proprietary vibrator hal to utilize the new powerful motor since the
         OnePlus 7 Pro. This HAL expects a different format for the data instead of the usual (ms)
         timing(the duration which the vibrator is expected to vibrate for). -->
    <bool name="config_hasOnePlusHapticMotor">true</bool>

    <!-- Whether device has screen with higher aspect ratio -->
    <bool name="config_haveHigherAspectRatioScreen">true</bool>

    <!-- Shows the required view for in-display fingerprint -->
    <bool name="config_supportsInDisplayFingerprint">true</bool>

    <!-- Whether key handler sends intent when changing slider position -->
    <string name="config_alertSliderIntent">org.shapeshift.settings.slider_settings.UPDATE_SLIDER_POSITION</string>

</resources>
